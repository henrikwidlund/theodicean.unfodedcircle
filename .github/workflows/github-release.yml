name: Publish to GitHub Packages

on:
  release:
    types: [published]

permissions:
  contents: read
  packages: write

jobs:
  build_and_publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore
        run: dotnet restore ./unfoldedcircle.sln

      - name: Build
        run: dotnet build ./unfoldedcircle.sln --configuration Release --no-restore

      - name: Compute package version from release tag
        shell: bash
        run: |
          TAG="${{ github.event.release.tag_name }}"
          VERSION=${TAG#v}
          if [[ -z "$VERSION" ]]; then
            echo "Release tag name is empty" >&2
            exit 1
          fi
          echo "PACKAGE_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Pack libraries
        run: |
          dotnet pack ./src/UnfoldedCircle.Models/UnfoldedCircle.Models.csproj --configuration Release --no-build --output ./artifacts -p:Version=$PACKAGE_VERSION
          dotnet pack ./src/UnfoldedCircle.Server/UnfoldedCircle.Server.csproj --configuration Release --no-build --output ./artifacts -p:Version=$PACKAGE_VERSION

      - name: Publish to nuget.org
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_PAT }}
        shell: bash
        run: |
          if [[ -z "$NUGET_API_KEY" ]]; then
            echo "NUGET_PAT secret is not set" >&2
            exit 1
          fi
          dotnet nuget push "./artifacts/*.nupkg" --source https://api.nuget.org/v3/index.json \
            --api-key "$NUGET_API_KEY" \
            --skip-duplicate
